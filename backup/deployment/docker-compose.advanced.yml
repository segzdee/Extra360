version: '3.8'
services:
  webapp:
    build:
      context: .
      dockerfile: Dockerfile.advanced
    volumes:
      - .:/app:delegated
      - webapp_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
      restart_policy:
        condition: on-failure
        max_attempts: 3
    networks:
      - mesh_network

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - mesh_network

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-provisioning.yml:/etc/grafana/provisioning/dashboards/main.yml
    ports:
      - "3001:3000"
    networks:
      - mesh_network

  consul:
    image: consul:latest
    ports:
      - "8500:8500"
    command: agent -server -bootstrap-expect=1 -ui -client=0.0.0.0
    networks:
      - mesh_network

volumes:
  webapp_node_modules:
    driver: local
    driver_opts:
      type: none
      device: $PWD/node_modules
      o: bind
  prometheus_data:
  grafana_data:

networks:
  mesh_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
